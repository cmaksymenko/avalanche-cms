# Avalanche CMS Local Stack

version: '3.8'
name: avalanchecms

# Network setup
networks:
  local:
    driver: bridge

# Services
services:

  # PostgreSQL Database
  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: always
    ports:
      - "5432:5432"
    networks:
      - local
    environment:
      POSTGRES_DB: admin
      POSTGRES_USER: postgresadminuser
      POSTGRES_PASSWORD_FILE: /run/secrets/avalanchecms/postgres-admin-user-secret.env
      AV_APP_NAME: PostgreSQL
      AV_ORIGINAL_ENTRYPOINT: docker-entrypoint.sh
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/entrypoint.sh:/usr/local/bin/avalanchecms/entrypoint.sh:ro
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
      - ./../../.secrets/postgres-admin-user-secret.env:/run/secrets/avalanchecms/postgres-admin-user-secret.env:ro
      - ./../../.secrets/postgres-avalanchecms-db-user-secret.env:/run/secrets/avalanchecms/postgres-avalanchecms-db-user-secret.env:ro
      - ./../../.secrets/postgres-keycloak-db-user-secret.env:/run/secrets/avalanchecms/postgres-keycloak-db-user-secret.env:ro
      - ./../../.secrets/postgres-pgadmin-db-user-secret.env:/run/secrets/avalanchecms/postgres-pgadmin-db-user-secret.env:ro
    entrypoint: /usr/local/bin/avalanchecms/entrypoint.sh
    command: ["postgres"]

  # pgAdmin Database Management
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8
    restart: always
    depends_on:
      - postgres
    ports:
      - "5050:80" # UI: http://host.docker.internal:5050/
    networks:
      - local
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadminuser@avalanchecms.com # admin user
      PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/avalanchecms/pgadmin-user-secret.env      
      PGADMIN_DB_URL_HOST: postgres
      PGADMIN_DB_URL_PORT: 5432
      PGADMIN_DB_URL_DATABASE: pgadmin
      PGADMIN_DB_URL_USERNAME: postgres_pgadmin_client
      PGADMIN_SERVER_JSON_FILE: /etc/avalanchecms/pgadmin-config.json
      PGADMIN_OAUTH2_CLIENT_SECRET_FILE: /run/secrets/avalanchecms/pgadmin-keycloak-client-secret.env
      AV_APP_NAME: pgAdmin
      AV_ORIGINAL_ENTRYPOINT: /entrypoint.sh
      AV_LOAD_SECRET_ENVS: true
      AV_CUSTOM_SCRIPT: /usr/local/bin/avalanchecms/pgadmin-config.sh
    volumes:
      - ./scripts/entrypoint.sh:/usr/local/bin/avalanchecms/entrypoint.sh:ro
      - ./scripts/pgadmin-config.sh:/usr/local/bin/avalanchecms/pgadmin-config.sh:ro
      - ./config/config_local.py:/pgadmin4/config_local.py:ro
      - ./config/pgadmin-config.json:/etc/avalanchecms/pgadmin-config.json:ro
      - ./../../.secrets/.pgpass:/run/secrets/avalanchecms/.pgpass:ro
      - ./../../.secrets/pgadmin-user-secret.env:/run/secrets/avalanchecms/pgadmin-user-secret.env:ro
      - ./../../.secrets/postgres-pgadmin-db-user-secret.env:/run/secrets/avalanchecms/postgres-pgadmin-db-user-secret.env:ro
      - ./../../.secrets/pgadmin-keycloak-client-secret.env:/run/secrets/avalanchecms/pgadmin-keycloak-client-secret.env:ro
    entrypoint: /usr/local/bin/avalanchecms/entrypoint.sh

  # Keycloak IAM
  keycloak:
    image: avalanchecms/local/keycloak
    container_name: keycloak
    build:
      context: ./docker/keycloak
      args:
        KEYCLOAK_VERSION: "23.0.7"
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080" # UI: http://host.docker.internal:8080/
    networks:
      - local
    environment:
      KEYCLOAK_ADMIN: keycloakadminuser # admin user
      KEYCLOAK_ADMIN_PASSWORD_FILE: /run/secrets/avalanchecms/keycloak-admin-user-secret.env
      KC_DB: postgres
      KC_DB_USERNAME: postgres_keycloak_client
      KC_DB_PASSWORD_FILE: /run/secrets/avalanchecms/postgres-keycloak-db-user-secret.env
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      AV_APP_NAME: Keycloak
      AV_LOAD_SECRET_ENVS: true
      AV_CUSTOM_SCRIPT: /usr/local/bin/avalanchecms/keycloak-config.sh
      AV_ORIGINAL_ENTRYPOINT: /opt/keycloak/bin/kc.sh
    volumes:
      - ./config/keycloak-realm-config.json:/tmp/avalanchecms/keycloak-realm-config.orig.json:ro
      - ./scripts/entrypoint.sh:/usr/local/bin/avalanchecms/entrypoint.sh:ro
      - ./scripts/keycloak-config.sh:/usr/local/bin/avalanchecms/keycloak-config.sh:ro
      - ./../../.secrets/keycloak-admin-user-secret.env:/run/secrets/avalanchecms/keycloak-admin-user-secret.env:ro
      - ./../../.secrets/postgres-keycloak-db-user-secret.env:/run/secrets/avalanchecms/postgres-keycloak-db-user-secret.env:ro
      - ./../../.secrets/hashes:/run/secrets/avalanchecms/hashes:ro
      - ./../../.secrets/pgadmin-keycloak-client-secret.env:/run/secrets/avalanchecms/pgadmin-keycloak-client-secret.env:ro
    entrypoint: /usr/local/bin/avalanchecms/entrypoint.sh
    command: ["start-dev", "--import-realm"] # Development mode, never use for production

  # Dapr
  dapr:
    image: "daprio/daprd:1.13.2"
    container_name: dapr
    restart: always
    ports:
      - "3500:3500" # HTTP
      - "50001:50001" # gRPC
    networks:
      - local
    command: [
      "./daprd",
      "-app-id", "dapr",
      "-app-port", "8888",
      "--resources-path", "/components"
    ]
    volumes:
        - "./config/dapr:/components"
    depends_on:
      - redis

  # Redis for Dapr
  redis:
    image: redis:7.2.4-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - local
    volumes:
      - redis-data:/data
  
# Storage Volumes
volumes:
  postgres-data:
  redis-data: